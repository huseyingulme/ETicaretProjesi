@model List<ETicaret.Core.Models.OrderViewModel>
@{
    ViewData["Title"] = "Sipariş Yönetimi";
    Layout = "_LayoutAdmin";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 mb-0">Sipariş Yönetimi</h1>
        <div>
            <a href="@Url.Action("Statistics")" class="btn btn-info me-2">
                <i class="fas fa-chart-bar me-1"></i> İstatistikler
            </a>
        </div>
    </div>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (!Model.Any())
    {
        <div class="text-center py-5">
            <i class="fas fa-shopping-bag fa-3x text-muted mb-3"></i>
            <h4 class="text-muted">Henüz sipariş bulunmuyor</h4>
        </div>
    }
    else
    {
        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>Sipariş No</th>
                                <th>Müşteri</th>
                                <th>Tarih</th>
                                <th>Tutar</th>
                                <th>Durum</th>
                                <th>Ödeme</th>
                                <th>İşlemler</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model)
                            {
                                <tr>
                                    <td>
                                        <strong>@order.OrderNumber</strong>
                                    </td>
                                    <td>
                                        <div>
                                            <strong>@order.Address.FullName</strong><br>
                                            <small class="text-muted">@order.Address.Phone</small>
                                        </div>
                                    </td>
                                    <td>
                                        @order.CreateDate.ToString("dd.MM.yyyy HH:mm", new System.Globalization.CultureInfo("tr-TR"))
                                    </td>
                                    <td>
                                        <strong class="text-primary">@order.TotalAmount.ToString("C")</strong>
                                    </td>
                                    <td>
                                        <span class="badge @GetStatusBadgeClass(order.OrderStatus)">
                                            @GetStatusDisplayName(order.OrderStatus)
                                        </span>
                                    </td>
                                    <td>
                                        <span class="badge @GetPaymentMethodBadgeClass(order.PaymentMethod)">
                                            @GetPaymentMethodDisplayName(order.PaymentMethod)
                                        </span>
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a href="@Url.Action("Details", new { id = order.Id })" 
                                               class="btn btn-sm btn-outline-primary" 
                                               title="Detayları Görüntüle">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a href="@Url.Action("Edit", new { id = order.Id })" 
                                               class="btn btn-sm btn-outline-warning" 
                                               title="Düzenle">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <button type="button" 
                                                    class="btn btn-sm btn-outline-secondary dropdown-toggle dropdown-toggle-split" 
                                                    data-bs-toggle="dropdown" 
                                                    aria-expanded="false">
                                                <span class="visually-hidden">Toggle Dropdown</span>
                                            </button>
                                            <ul class="dropdown-menu">
                                                <li><h6 class="dropdown-header">Durum Güncelle</h6></li>
                                                @foreach (var status in Enum.GetValues<ETicaret.Core.Entities.OrderStatus>())
                                                {
                                                    if (status != order.OrderStatus)
                                                    {
                                                        <li>
                                                            <form asp-action="UpdateStatus" method="post" style="display: inline;">
                                                                <input type="hidden" name="id" value="@order.Id" />
                                                                <input type="hidden" name="status" value="@((int)status)" />
                                                                <button type="submit" class="dropdown-item">
                                                                    @GetStatusDisplayName(status)
                                                                </button>
                                                            </form>
                                                        </li>
                                                    }
                                                }
                                                <li><hr class="dropdown-divider"></li>
                                                <li>
                                                    <a class="dropdown-item text-danger" href="@Url.Action("Delete", new { id = order.Id })">
                                                        <i class="fas fa-trash me-1"></i> Sil
                                                    </a>
                                                </li>
                                            </ul>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</div>

@functions {
    public string GetStatusBadgeClass(ETicaret.Core.Entities.OrderStatus status)
    {
        return status switch
        {
            ETicaret.Core.Entities.OrderStatus.Pending => "bg-warning",
            ETicaret.Core.Entities.OrderStatus.Confirmed => "bg-info",
            ETicaret.Core.Entities.OrderStatus.Preparing => "bg-primary",
            ETicaret.Core.Entities.OrderStatus.Shipped => "bg-info",
            ETicaret.Core.Entities.OrderStatus.Delivered => "bg-success",
            ETicaret.Core.Entities.OrderStatus.Cancelled => "bg-danger",
            _ => "bg-secondary"
        };
    }

    public string GetStatusDisplayName(ETicaret.Core.Entities.OrderStatus status)
    {
        return status switch
        {
            ETicaret.Core.Entities.OrderStatus.Pending => "Beklemede",
            ETicaret.Core.Entities.OrderStatus.Confirmed => "Onaylandı",
            ETicaret.Core.Entities.OrderStatus.Preparing => "Hazırlanıyor",
            ETicaret.Core.Entities.OrderStatus.Shipped => "Kargoda",
            ETicaret.Core.Entities.OrderStatus.Delivered => "Teslim Edildi",
            ETicaret.Core.Entities.OrderStatus.Cancelled => "İptal Edildi",
            _ => "Bilinmiyor"
        };
    }

    public string GetPaymentMethodBadgeClass(ETicaret.Core.Entities.PaymentMethod paymentMethod)
    {
        return paymentMethod switch
        {
            ETicaret.Core.Entities.PaymentMethod.BankTransfer => "bg-success",
            ETicaret.Core.Entities.PaymentMethod.CashOnDelivery => "bg-warning",
            _ => "bg-secondary"
        };
    }

    public string GetPaymentMethodDisplayName(ETicaret.Core.Entities.PaymentMethod paymentMethod)
    {
        return paymentMethod switch
        {
            ETicaret.Core.Entities.PaymentMethod.CreditCard => "Kredi Kartı",
            ETicaret.Core.Entities.PaymentMethod.DebitCard => "Banka Kartı",
            ETicaret.Core.Entities.PaymentMethod.CashOnDelivery => "Kapıda Ödeme",
            ETicaret.Core.Entities.PaymentMethod.BankTransfer => "Havale/EFT",
            _ => "Bilinmiyor"
        };
    }
}

<!-- Filtreleme Modal -->
<div class="modal fade" id="filterModal" tabindex="-1" aria-labelledby="filterModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="filterModalLabel">Siparişleri Filtrele</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="get" asp-action="Index">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="statusFilter" class="form-label">Sipariş Durumu</label>
                            <select class="form-select" id="statusFilter" name="status">
                                <option value="">Tümü</option>
                                <option value="0">Beklemede</option>
                                <option value="1">Onaylandı</option>
                                <option value="2">Hazırlanıyor</option>
                                <option value="3">Kargoda</option>
                                <option value="4">Teslim Edildi</option>
                                <option value="5">İptal Edildi</option>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="paymentFilter" class="form-label">Ödeme Yöntemi</label>
                            <select class="form-select" id="paymentFilter" name="paymentMethod">
                                <option value="">Tümü</option>
                                <option value="0">Kredi Kartı</option>
                                <option value="1">Banka Kartı</option>
                                <option value="2">Kapıda Ödeme</option>
                                <option value="3">Havale/EFT</option>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="startDate" class="form-label">Başlangıç Tarihi</label>
                            <input type="date" class="form-control" id="startDate" name="startDate">
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="endDate" class="form-label">Bitiş Tarihi</label>
                            <input type="date" class="form-control" id="endDate" name="endDate">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                    <button type="submit" class="btn btn-primary">Filtrele</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // DataTable ekle
            $('.table').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.13.4/i18n/tr.json"
                },
                "pageLength": 25,
                "order": [[2, "desc"]], // Tarihe göre azalan sıralama
                "columnDefs": [
                    { "orderable": false, "targets": 6 } // İşlemler sütunu sıralanamaz
                ]
            });
        });
    </script>
}

<style>
    /* Dropdown menü düzeltmeleri */
    .table-responsive {
        overflow: visible !important;
    }
    
    .dropdown-menu {
        z-index: 1050 !important;
        position: absolute !important;
        min-width: 200px;
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        border: 1px solid rgba(0, 0, 0, 0.15);
        border-radius: 0.375rem;
    }
    
    .btn-group {
        position: relative;
    }
    
    .btn-group .dropdown-menu {
        top: 100% !important;
        left: auto !important;
        right: 0 !important;
        transform: none !important;
    }
    
    /* Tablo hücrelerinde dropdown için yeterli alan */
    .table td {
        position: relative;
        vertical-align: middle;
    }
    
    /* Dropdown item'ları için hover efekti */
    .dropdown-item:hover {
        background-color: #f8f9fa;
        color: #495057;
    }
    
    .dropdown-item.text-danger:hover {
        background-color: #f8d7da;
        color: #721c24;
    }
    
    /* Form içindeki butonlar için düzeltme */
    .dropdown-item form {
        margin: 0;
    }
    
    .dropdown-item button {
        width: 100%;
        text-align: left;
        background: none;
        border: none;
        padding: 0.25rem 1rem;
        color: inherit;
    }
    
    .dropdown-item button:hover {
        background-color: #f8f9fa;
        color: #495057;
    }
    
    /* Responsive düzeltmeler */
    @@media (max-width: 768px) {
        .btn-group .dropdown-menu {
            right: auto !important;
            left: 0 !important;
        }
    }
</style>
